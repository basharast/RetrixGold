<UserControl
    x:Class="RetriX.UWP.Controls.VirtualPad"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:RetriX.UWP.Converters"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:Interactivity="using:Microsoft.Xaml.Interactivity"
    xmlns:Core="using:Microsoft.Xaml.Interactions.Core" 
    mc:Ignorable="d"
    RequestedTheme="Dark"
    Height="230"
    Width="180"
    x:Name="LeftControls">

    <UserControl.Resources>
        <local:BoolToVisibilityConverter x:Key="BoolToVisibilityConverter" />
        <local:BoolNegationConverter x:Key="BoolNegationConverter" />
        <Style x:Name="ButtonStyleNew" TargetType="Button" BasedOn="{StaticResource TextBlockButtonStyle}">
            <Setter Property="IsTabStop" Value="False"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="HorizontalAlignment" Value="Center"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="Padding" Value="0"/>
        </Style>
        <Style x:Name="ButtonLabelStyle" TargetType="TextBlock">
            <Setter Property="FontFamily" Value="{StaticResource SymbolThemeFontFamily}"/>
            <Setter Property="FontSize" Value="40"/>
        </Style>
        <SolidColorBrush x:Key="InActive" Color="#686668" />
        <SolidColorBrush x:Key="ActiveButton" Color="#FF3067DD" />
    </UserControl.Resources>

    <Grid HorizontalAlignment="Left" VerticalAlignment="Top">
        <Grid.RowDefinitions>
            <RowDefinition Height="*"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="*"/>
        </Grid.ColumnDefinitions>
        
        <Button RequestedTheme="Dark" x:Name="Action1Button" Margin="0,0,5,0" Visibility="{x:Bind ViewModel.ShowActionsButtons, Mode=OneWay, Converter={StaticResource BoolToVisibilityConverter}}" Tapped="Action1Button_Tapped" Holding="Action1Button_Holding"  Grid.Column="0" Grid.Row="0" Style="{StaticResource ButtonStyleNew}" Background="#686668" Opacity="{x:Bind ViewModel.ButtonsOpacity, Mode=OneWay}" Width="50" Height="50" HorizontalAlignment="Center">
            <TextBlock x:Name="Action1ButtonText" Style="{StaticResource ButtonLabelStyle}" FontSize="33" Margin="0,0,0,10">&#10102;</TextBlock>
        </Button>

        <Button RequestedTheme="Dark"  x:Name="Action2Button" Margin="0,0,5,0" Visibility="{x:Bind ViewModel.ShowActionsButtons, Mode=OneWay, Converter={StaticResource BoolToVisibilityConverter}}" Tapped="Action2Button_Tapped" Holding="Action2Button_Holding" Grid.Column="1" Grid.Row="0" Style="{StaticResource ButtonStyleNew}" Background="#686668" Opacity="{x:Bind ViewModel.ButtonsOpacity, Mode=OneWay}" Width="50" Height="50" HorizontalAlignment="Center">
            <TextBlock x:Name="Action2ButtonText" Style="{StaticResource ButtonLabelStyle}" FontSize="33" Margin="0,0,0,10">&#10103;</TextBlock>
        </Button>

        <Button RequestedTheme="Dark"  x:Name="Action3Button" Visibility="{x:Bind ViewModel.ShowActionsButtons, Mode=OneWay, Converter={StaticResource BoolToVisibilityConverter}}" Tapped="Action3Button_Tapped" Holding="Action3Button_Holding"  Grid.Column="2" Grid.Row="0" Style="{StaticResource ButtonStyleNew}" Background="#686668" Opacity="{x:Bind ViewModel.ButtonsOpacity, Mode=OneWay}" Width="50" Height="50" HorizontalAlignment="Center">
            <TextBlock x:Name="Action3ButtonText" Style="{StaticResource ButtonLabelStyle}" FontSize="33" Margin="0,0,0,10">&#10104;</TextBlock>
        </Button>

        <Button x:Name="UpButton" Tapped="UpButtonTapped" PointerExited="UpButton_PointerExited" PointerReleased="UpButton_PointerReleased" Grid.Column="1" Grid.Row="1" Style="{StaticResource ButtonStyleNew}" Click="UpButtonClick" Background="#686668" Opacity="{x:Bind ViewModel.ButtonsOpacity, Mode=OneWay}" Width="50" Height="50" Margin="0,5,5,0">
            <TextBlock Style="{StaticResource ButtonLabelStyle}">&#xe010;</TextBlock>
            <Interactivity:Interaction.Behaviors>
                <Core:DataTriggerBehavior Binding="{Binding IsPressed, ElementName=UpButton}" Value="True">
                    <Core:ChangePropertyAction TargetObject="{Binding ElementName=UpButton}" PropertyName="Background" Value="{StaticResource ActiveButton}" />
                    <Core:CallMethodAction TargetObject="{Binding ElementName=LeftControls, Mode=OneWay}" MethodName="UpActive"></Core:CallMethodAction>
                </Core:DataTriggerBehavior>
                <Core:DataTriggerBehavior Binding="{Binding IsPressed, ElementName=UpButton}" Value="False">
                    <Core:ChangePropertyAction TargetObject="{Binding ElementName=UpButton}" PropertyName="Background" Value="{StaticResource InActive}" />
                    <Core:CallMethodAction TargetObject="{Binding ElementName=LeftControls, Mode=OneWay}" MethodName="UpInActive"></Core:CallMethodAction>
                </Core:DataTriggerBehavior>
            </Interactivity:Interaction.Behaviors>
        </Button>
        <Button x:Name="LeftButton" Tapped="LeftButtonTapped" PointerExited="LeftButton_PointerExited" PointerReleased="LeftButton_PointerReleased" Grid.Column="0" Grid.Row="2" Style="{StaticResource ButtonStyleNew}" Click="LeftButtonClick" Background="#686668" Opacity="{x:Bind ViewModel.ButtonsOpacity, Mode=OneWay}" Width="50" Height="50" Margin="0,5,5,0">
            <TextBlock Style="{StaticResource ButtonLabelStyle}">&#xe012;</TextBlock>
            <Interactivity:Interaction.Behaviors>
                <Core:DataTriggerBehavior Binding="{Binding IsPressed, ElementName=LeftButton}" Value="True">
                    <Core:ChangePropertyAction TargetObject="{Binding ElementName=LeftButton}" PropertyName="Background" Value="{StaticResource ActiveButton}" />
                    <Core:CallMethodAction TargetObject="{Binding ElementName=LeftControls, Mode=OneWay}" MethodName="LeftActive"></Core:CallMethodAction>
                </Core:DataTriggerBehavior>
                <Core:DataTriggerBehavior Binding="{Binding IsPressed, ElementName=LeftButton}" Value="False">
                    <Core:ChangePropertyAction TargetObject="{Binding ElementName=LeftButton}" PropertyName="Background" Value="{StaticResource InActive}" />
                    <Core:CallMethodAction TargetObject="{Binding ElementName=LeftControls, Mode=OneWay}" MethodName="LeftInActive"></Core:CallMethodAction>
                </Core:DataTriggerBehavior>
            </Interactivity:Interaction.Behaviors>
        </Button>
        <Button x:Name="RightButton" Tapped="RightButtonTapped" PointerExited="RightButton_PointerExited" PointerReleased="RightButton_PointerReleased" Grid.Column="2" Grid.Row="2" Style="{StaticResource ButtonStyleNew}" Click="RightButtonClick" Background="#686668" Opacity="{x:Bind ViewModel.ButtonsOpacity, Mode=OneWay}" Width="50" Height="50" Margin="0,5,0,0">
            <TextBlock Style="{StaticResource ButtonLabelStyle}">&#xe013;</TextBlock>
            <Interactivity:Interaction.Behaviors>
                <Core:DataTriggerBehavior Binding="{Binding IsPressed, ElementName=RightButton}" Value="True">
                    <Core:ChangePropertyAction TargetObject="{Binding ElementName=RightButton}" PropertyName="Background" Value="{StaticResource ActiveButton}" />
                    <Core:CallMethodAction TargetObject="{Binding ElementName=LeftControls, Mode=OneWay}" MethodName="RightActive"></Core:CallMethodAction>
                </Core:DataTriggerBehavior>
                <Core:DataTriggerBehavior Binding="{Binding IsPressed, ElementName=RightButton}" Value="False">
                    <Core:ChangePropertyAction TargetObject="{Binding ElementName=RightButton}" PropertyName="Background" Value="{StaticResource InActive}" />
                    <Core:CallMethodAction TargetObject="{Binding ElementName=LeftControls, Mode=OneWay}" MethodName="RightInActive"></Core:CallMethodAction>
                </Core:DataTriggerBehavior>
            </Interactivity:Interaction.Behaviors>
        </Button>
        <Button x:Name="DownButton" Tapped="DownButtonTapped" PointerExited="DownButton_PointerExited" PointerReleased="DownButton_PointerReleased" Grid.Column="1" Grid.Row="3" Style="{StaticResource ButtonStyleNew}" Click="DownButtonClick" Background="#686668" Opacity="{x:Bind ViewModel.ButtonsOpacity, Mode=OneWay}" Width="50" Height="50" Margin="0,5,5,0">
            <TextBlock Style="{StaticResource ButtonLabelStyle}" HorizontalAlignment="Center" VerticalAlignment="Center">&#xe011;</TextBlock>
            <Interactivity:Interaction.Behaviors>
                <Core:DataTriggerBehavior Binding="{Binding IsPressed, ElementName=DownButton}" Value="True">
                    <Core:ChangePropertyAction TargetObject="{Binding ElementName=DownButton}" PropertyName="Background" Value="{StaticResource ActiveButton}" />
                    <Core:CallMethodAction TargetObject="{Binding ElementName=LeftControls, Mode=OneWay}" MethodName="DownActive"></Core:CallMethodAction>
                </Core:DataTriggerBehavior>
                <Core:DataTriggerBehavior Binding="{Binding IsPressed, ElementName=DownButton}" Value="False">
                    <Core:ChangePropertyAction TargetObject="{Binding ElementName=DownButton}" PropertyName="Background" Value="{StaticResource InActive}" />
                    <Core:CallMethodAction TargetObject="{Binding ElementName=LeftControls, Mode=OneWay}" MethodName="DownInActive"></Core:CallMethodAction>
                </Core:DataTriggerBehavior>
            </Interactivity:Interaction.Behaviors>
        </Button>
        <Button x:Name="DownLeftButton" Tapped="DownLeftButtonTapped" PointerExited="DownLeftButton_PointerExited" PointerReleased="DownLeftButton_PointerReleased" Grid.Column="0" Grid.Row="3" Style="{StaticResource ButtonStyleNew}" Click="DownLeftButtonClick" Background="#686668" Opacity="{x:Bind ViewModel.ButtonsSubOpacity, Mode=OneWay}" Width="50" Height="50" Margin="0,5,5,0">
            <TextBlock Style="{StaticResource ButtonLabelStyle}" HorizontalAlignment="Center" VerticalAlignment="Center" FlowDirection="LeftToRight" FocusVisualPrimaryBrush="Black">
                <TextBlock.Projection>
                    <PlaneProjection RotationX="0" RotationZ="-45"/>
                </TextBlock.Projection>&#xe011;</TextBlock>
            <Interactivity:Interaction.Behaviors>
                <Core:DataTriggerBehavior Binding="{Binding IsPressed, ElementName=DownLeftButton}" Value="True">
                    <Core:ChangePropertyAction TargetObject="{Binding ElementName=DownLeftButton}" PropertyName="Background" Value="{StaticResource ActiveButton}" />
                    <Core:CallMethodAction TargetObject="{Binding ElementName=LeftControls, Mode=OneWay}" MethodName="DownActive"></Core:CallMethodAction>
                    <Core:CallMethodAction TargetObject="{Binding ElementName=LeftControls, Mode=OneWay}" MethodName="LeftActive"></Core:CallMethodAction>
                </Core:DataTriggerBehavior>
                <Core:DataTriggerBehavior Binding="{Binding IsPressed, ElementName=DownLeftButton}" Value="False">
                    <Core:ChangePropertyAction TargetObject="{Binding ElementName=DownLeftButton}" PropertyName="Background" Value="{StaticResource InActive}" />
                    <Core:CallMethodAction TargetObject="{Binding ElementName=LeftControls, Mode=OneWay}" MethodName="DownInActive"></Core:CallMethodAction>
                    <Core:CallMethodAction TargetObject="{Binding ElementName=LeftControls, Mode=OneWay}" MethodName="LeftInActive"></Core:CallMethodAction>
                </Core:DataTriggerBehavior>
            </Interactivity:Interaction.Behaviors>
        </Button>
        <Button x:Name="UpLeftButton" Tapped="UpLeftButtonTapped" PointerExited="UpLeftButton_PointerExited" PointerReleased="UpLeftButton_PointerReleased" Grid.Column="0" Grid.Row="1" Style="{StaticResource ButtonStyleNew}" Click="UpLeftButtonClick" Background="#686668" Opacity="{x:Bind ViewModel.ButtonsSubOpacity, Mode=OneWay}" Width="50" Height="50" Margin="0,5,5,0">
            <TextBlock Style="{StaticResource ButtonLabelStyle}" HorizontalAlignment="Center" VerticalAlignment="Center" FlowDirection="LeftToRight">
                <TextBlock.Projection>
                    <PlaneProjection RotationX="0" RotationZ="-135"/>
                </TextBlock.Projection>&#xe011;</TextBlock>
            <Interactivity:Interaction.Behaviors>
                <Core:DataTriggerBehavior Binding="{Binding IsPressed, ElementName=UpLeftButton}" Value="True">
                    <Core:ChangePropertyAction TargetObject="{Binding ElementName=UpLeftButton}" PropertyName="Background" Value="{StaticResource ActiveButton}" />
                    <Core:CallMethodAction TargetObject="{Binding ElementName=LeftControls, Mode=OneWay}" MethodName="UpLeftActive"></Core:CallMethodAction>
                </Core:DataTriggerBehavior>
                <Core:DataTriggerBehavior Binding="{Binding IsPressed, ElementName=UpLeftButton}" Value="False">
                    <Core:ChangePropertyAction TargetObject="{Binding ElementName=UpLeftButton}" PropertyName="Background" Value="{StaticResource InActive}" />
                    <Core:CallMethodAction TargetObject="{Binding ElementName=LeftControls, Mode=OneWay}" MethodName="UpLeftInActive"></Core:CallMethodAction>
                </Core:DataTriggerBehavior>
            </Interactivity:Interaction.Behaviors>
        </Button>
        <Button x:Name="DownRightButton" Tapped="DownRightButtonTapped" PointerExited="DownRightButton_PointerExited" PointerReleased="DownRightButton_PointerReleased" Grid.Column="2" Grid.Row="3" Style="{StaticResource ButtonStyleNew}" Click="DownRightButtonClick" Background="#686668" Opacity="{x:Bind ViewModel.ButtonsSubOpacity, Mode=OneWay}" Width="50" Height="50" Margin="0,5,0,0">
            <TextBlock Style="{StaticResource ButtonLabelStyle}" HorizontalAlignment="Center" VerticalAlignment="Center" FlowDirection="LeftToRight">
                <TextBlock.Projection>
                    <PlaneProjection RotationX="0" RotationZ="45"/>
                </TextBlock.Projection>&#xe011;</TextBlock>
            <Interactivity:Interaction.Behaviors>
                <Core:DataTriggerBehavior Binding="{Binding IsPressed, ElementName=DownRightButton}" Value="True">
                    <Core:ChangePropertyAction TargetObject="{Binding ElementName=DownRightButton}" PropertyName="Background" Value="{StaticResource ActiveButton}" />
                    <Core:CallMethodAction TargetObject="{Binding ElementName=LeftControls, Mode=OneWay}" MethodName="DownActive"></Core:CallMethodAction>
                    <Core:CallMethodAction TargetObject="{Binding ElementName=LeftControls, Mode=OneWay}" MethodName="RightActive"></Core:CallMethodAction>
                </Core:DataTriggerBehavior>
                <Core:DataTriggerBehavior Binding="{Binding IsPressed, ElementName=DownRightButton}" Value="False">
                    <Core:ChangePropertyAction TargetObject="{Binding ElementName=DownRightButton}" PropertyName="Background" Value="{StaticResource InActive}" />
                    <Core:CallMethodAction TargetObject="{Binding ElementName=LeftControls, Mode=OneWay}" MethodName="DownInActive"></Core:CallMethodAction>
                    <Core:CallMethodAction TargetObject="{Binding ElementName=LeftControls, Mode=OneWay}" MethodName="RightInActive"></Core:CallMethodAction>
                </Core:DataTriggerBehavior>
            </Interactivity:Interaction.Behaviors>
        </Button>
        <Button x:Name="UpRightButton" Tapped="UpRightButtonTapped" PointerExited="UpRightButton_PointerExited" PointerReleased="UpRightButton_PointerReleased" Grid.Column="2" Margin="0,5,0,0" Grid.Row="1" Style="{StaticResource ButtonStyleNew}" Click="UpRightButtonClick" Background="#686668" Opacity="{x:Bind ViewModel.ButtonsSubOpacity, Mode=OneWay}" Width="50" Height="50">
            <TextBlock Style="{StaticResource ButtonLabelStyle}" HorizontalAlignment="Center" VerticalAlignment="Center" FlowDirection="LeftToRight">
                <TextBlock.Projection>
                    <PlaneProjection RotationX="0" RotationZ="135"/>
                </TextBlock.Projection>&#xe011;</TextBlock>
            <Interactivity:Interaction.Behaviors>
                <Core:DataTriggerBehavior Binding="{Binding IsPressed, ElementName=UpRightButton}" Value="True">
                    <Core:ChangePropertyAction TargetObject="{Binding ElementName=UpRightButton}" PropertyName="Background" Value="{StaticResource ActiveButton}" />
                    <Core:CallMethodAction TargetObject="{Binding ElementName=LeftControls, Mode=OneWay}" MethodName="UpRightActive"></Core:CallMethodAction>
                </Core:DataTriggerBehavior>
                <Core:DataTriggerBehavior Binding="{Binding IsPressed, ElementName=UpRightButton}" Value="False">
                    <Core:ChangePropertyAction TargetObject="{Binding ElementName=UpRightButton}" PropertyName="Background" Value="{StaticResource InActive}" />
                    <Core:CallMethodAction TargetObject="{Binding ElementName=LeftControls, Mode=OneWay}" MethodName="UpRightInActive"></Core:CallMethodAction>
                </Core:DataTriggerBehavior>
            </Interactivity:Interaction.Behaviors>
        </Button>
        <Button x:Name="AnalogControlButton" Tapped="PointerPressedTapped" Grid.Column="1" Holding="AnalogControlButton_Holding" Grid.Row="2" Style="{StaticResource ButtonStyleNew}" ManipulationMode = "TranslateX, TranslateY, Scale" ManipulationDelta="AnalogControlSetup" ManipulationCompleted="ManipulationCompleted"  Background="#686668" Opacity="{x:Bind ViewModel.ButtonsSubOpacity, Mode=OneWay}" Width="50" Height="50" HorizontalContentAlignment="Center" Margin="0,5,5,0" Canvas.ZIndex="2">
            <TextBlock Style="{StaticResource ButtonLabelStyle}" HorizontalAlignment="Center" VerticalAlignment="Center">&#xecca;
                <TextBlock.RenderTransform>
                    <CompositeTransform x:Name="AnalogControlButtonTransform" />
                </TextBlock.RenderTransform>
            </TextBlock>
            <Interactivity:Interaction.Behaviors>
                <Core:DataTriggerBehavior Binding="{Binding IsPressed, ElementName=AnalogControlButton}" Value="True">
                    <Core:ChangePropertyAction TargetObject="{Binding ElementName=AnalogControlButton}" PropertyName="Background" Value="{StaticResource ActiveButton}" />
                    <Core:CallMethodAction TargetObject="{Binding ElementName=LeftControls, Mode=OneWay}" MethodName="PointerActive"></Core:CallMethodAction>
                    <Core:CallMethodAction TargetObject="{Binding ElementName=LeftControls, Mode=OneWay}" MethodName="AMouseLeftActive"></Core:CallMethodAction>
                </Core:DataTriggerBehavior>
                <Core:DataTriggerBehavior Binding="{Binding IsPressed, ElementName=AnalogControlButton}" Value="False">
                    <Core:ChangePropertyAction TargetObject="{Binding ElementName=AnalogControlButton}" PropertyName="Background" Value="{StaticResource InActive}" />
                    <Core:CallMethodAction TargetObject="{Binding ElementName=LeftControls, Mode=OneWay}" MethodName="PointerInActive"></Core:CallMethodAction>
                    <Core:CallMethodAction TargetObject="{Binding ElementName=LeftControls, Mode=OneWay}" MethodName="AMouseLeftInActive"></Core:CallMethodAction>
                </Core:DataTriggerBehavior>
            </Interactivity:Interaction.Behaviors>
        </Button>

        <Grid Grid.RowSpan="4" Grid.Row="0" Grid.ColumnSpan="3" Background="Black" Canvas.ZIndex="200" Visibility="{x:Bind ViewModel.ButtonsIsLoading, Mode=OneWay, Converter={StaticResource BoolToVisibilityConverter}}">
            <ProgressRing x:Name="ButtonsLoadingProgressDouble" HorizontalAlignment="Center" VerticalAlignment="Center" Width="50" Height="50" IsActive="{x:Bind ViewModel.ButtonsIsLoading, Mode=OneWay}"/>
        </Grid>
        
    </Grid>
    
</UserControl>
